{"ast":null,"code":"var _jsxFileName = \"/Users/hans/Desktop/Meditation/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { MediumTitle } from 'style/style';\nimport Button from 'components/Button/Button';\nimport { useHistory } from 'react-router-dom'; // Updated import\n// ... (Styled components)\n\nfunction InputStep({\n  question,\n  value,\n  onChange,\n  onKeyPress,\n  type = 'text',\n  min,\n  max\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, question), /*#__PURE__*/React.createElement(Input, {\n    onChange: onChange,\n    onKeyPress: onKeyPress,\n    value: value,\n    type: type,\n    min: min,\n    max: max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Register() {\n  const history = useHistory(); // Use useHistory hook\n\n  const [name, setName] = useState(localStorage.getItem('name') || '');\n  const [age, setAge] = useState(localStorage.getItem('age') || '');\n  const [step, setStep] = useState(name ? 2 : 1);\n  const [error, setError] = useState('');\n\n  const validateInput = input => {\n    if (!input) {\n      setError(`Please enter your ${step === 1 ? 'name' : 'age'}.`);\n      return false;\n    }\n\n    if (step === 2) {\n      const ageValue = parseInt(input, 10);\n\n      if (isNaN(ageValue) || ageValue <= 0 || ageValue >= 120) {\n        setError('Please enter a valid age between 1 and 119.');\n        return false;\n      }\n    }\n\n    setError('');\n    return true;\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n\n  const handleAgeChange = e => setAge(e.target.value);\n\n  const handleClick = () => {\n    if (step === 1) {\n      const isValid = validateInput(name);\n\n      if (isValid) {\n        localStorage.setItem('name', name);\n        setStep(2);\n      }\n    } else if (step === 2) {\n      const isValid = validateInput(age);\n\n      if (isValid) {\n        localStorage.setItem('age', age);\n        history.push('/'); // Navigate to the home page\n      }\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleClick();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(QuestionContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, step === 1 ? /*#__PURE__*/React.createElement(InputStep, {\n    question: \"What is your name?\",\n    value: name,\n    onChange: handleNameChange,\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(InputStep, {\n    question: \"What is your age?\",\n    value: age,\n    onChange: handleAgeChange,\n    onKeyPress: handleKeyPress,\n    type: \"number\",\n    min: \"1\",\n    max: \"119\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default React.memo(Register);","map":{"version":3,"sources":["/Users/hans/Desktop/Meditation/src/pages/Register.js"],"names":["React","useState","styled","MediumTitle","Button","useHistory","InputStep","question","value","onChange","onKeyPress","type","min","max","Register","history","name","setName","localStorage","getItem","age","setAge","step","setStep","error","setError","validateInput","input","ageValue","parseInt","isNaN","handleNameChange","e","target","handleAgeChange","handleClick","isValid","setItem","push","handleKeyPress","key","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { MediumTitle } from 'style/style';\nimport Button from 'components/Button/Button';\nimport { useHistory } from 'react-router-dom'; // Updated import\n\n// ... (Styled components)\n\nfunction InputStep({ question, value, onChange, onKeyPress, type = 'text', min, max }) {\n  return (\n    <>\n      <MediumTitle>{question}</MediumTitle>\n      <Input\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        value={value}\n        type={type}\n        min={min}\n        max={max}\n      />\n    </>\n  );\n}\n\nfunction Register() {\n  const history = useHistory(); // Use useHistory hook\n  const [name, setName] = useState(localStorage.getItem('name') || '');\n  const [age, setAge] = useState(localStorage.getItem('age') || '');\n  const [step, setStep] = useState(name ? 2 : 1);\n  const [error, setError] = useState('');\n\n  const validateInput = input => {\n    if (!input) {\n      setError(`Please enter your ${step === 1 ? 'name' : 'age'}.`);\n      return false;\n    }\n    if (step === 2) {\n      const ageValue = parseInt(input, 10);\n      if (isNaN(ageValue) || ageValue <= 0 || ageValue >= 120) {\n        setError('Please enter a valid age between 1 and 119.');\n        return false;\n      }\n    }\n    setError('');\n    return true;\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n  const handleAgeChange = e => setAge(e.target.value);\n\n  const handleClick = () => {\n    if (step === 1) {\n      const isValid = validateInput(name);\n      if (isValid) {\n        localStorage.setItem('name', name);\n        setStep(2);\n      }\n    } else if (step === 2) {\n      const isValid = validateInput(age);\n      if (isValid) {\n        localStorage.setItem('age', age);\n        history.push('/'); // Navigate to the home page\n      }\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleClick();\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <QuestionContainer>\n          {step === 1 ? (\n            <InputStep\n              question=\"What is your name?\"\n              value={name}\n              onChange={handleNameChange}\n              onKeyPress={handleKeyPress}\n            />\n          ) : (\n            <InputStep\n              question=\"What is your age?\"\n              value={age}\n              onChange={handleAgeChange}\n              onKeyPress={handleKeyPress}\n              type=\"number\"\n              min=\"1\"\n              max=\"119\"\n            />\n          )}\n          {error && <ErrorText>{error}</ErrorText>}\n          <Button onClick={handleClick} />\n        </QuestionContainer>\n      </Container>\n    </div>\n  );\n}\n\nexport default React.memo(Register);"]},"metadata":{},"sourceType":"module"}