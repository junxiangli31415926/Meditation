{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Meditation/src/App.js\";\nimport React, { useState } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport './App.css';\nimport Themes from 'pages/Themes';\nimport Register from 'pages/Register';\nimport Congraturation from 'pages/Congraturation';\nimport { OceanWave, MountainView, RainyBeach } from 'pages/Themes';\nimport Layout from 'components/Layout/Layout';\nimport axios from 'axios';\n\nfunction App() {\n  const location = useLocation();\n  const userName = localStorage.getItem('name');\n  const [meditationThought, setMeditationThought] = useState('');\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false); // 生成冥想思考的函数\n\n  const fetchMeditationThought = async () => {\n    if (!input.trim()) {\n      alert(\"请输入冥想主题\");\n      return;\n    }\n\n    setLoading(true);\n    setMeditationThought('');\n\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-4o-mini',\n        messages: [{\n          role: 'user',\n          content: `Generate a meditation thought about: ${input}`\n        }]\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        }\n      });\n      setMeditationThought(response.data.choices[0].message.content.trim());\n    } catch (error) {\n      console.error('Error generating meditation thought:', error);\n      setMeditationThought('无法生成冥想思考，请稍后重试。');\n    }\n\n    setLoading(false);\n  };\n\n  let route;\n\n  if (!userName) {\n    route = /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  } else {\n    route = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Themes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/ocean\",\n      component: OceanWave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/mountain\",\n      component: MountainView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/rainy\",\n      component: RainyBeach,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/congraturation\",\n      component: Congraturation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, route), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"\\u751F\\u6210\\u51A5\\u60F3\\u601D\\u8003\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"\\u8F93\\u5165\\u51A5\\u60F3\\u4E3B\\u9898\\uFF0C\\u4F8B\\u5982 '\\u5E73\\u9759'\",\n    style: {\n      padding: '10px',\n      width: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMeditationThought,\n    style: {\n      marginLeft: '10px',\n      padding: '10px 20px'\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, loading ? '生成中...' : '生成'), meditationThought && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px',\n      fontSize: '20px',\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"\\u751F\\u6210\\u7684\\u51A5\\u60F3\\u601D\\u8003\\uFF1A\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, meditationThought)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/john/Desktop/Meditation/src/App.js"],"names":["React","useState","Route","Switch","useLocation","Themes","Register","Congraturation","OceanWave","MountainView","RainyBeach","Layout","axios","App","location","userName","localStorage","getItem","meditationThought","setMeditationThought","input","setInput","loading","setLoading","fetchMeditationThought","trim","alert","response","post","model","messages","role","content","headers","process","env","REACT_APP_OPENAI_API_KEY","data","choices","message","error","console","route","textAlign","marginTop","e","target","value","padding","width","marginLeft","fontSize","fontStyle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport './App.css';\n\nimport Themes from 'pages/Themes';\nimport Register from 'pages/Register';\nimport Congraturation from 'pages/Congraturation';\nimport { OceanWave, MountainView, RainyBeach } from 'pages/Themes';\nimport Layout from 'components/Layout/Layout';\n\nimport axios from 'axios';\n\nfunction App() {\n  const location = useLocation();\n  const userName = localStorage.getItem('name');\n  const [meditationThought, setMeditationThought] = useState('');\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // 生成冥想思考的函数\n  const fetchMeditationThought = async () => {\n    if (!input.trim()) {\n      alert(\"请输入冥想主题\");\n      return;\n    }\n    setLoading(true);\n    setMeditationThought('');\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-4o-mini',\n          messages: [{ role: 'user', content: `Generate a meditation thought about: ${input}` }],\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          },\n        }\n      );\n\n      setMeditationThought(response.data.choices[0].message.content.trim());\n    } catch (error) {\n      console.error('Error generating meditation thought:', error);\n      setMeditationThought('无法生成冥想思考，请稍后重试。');\n    }\n    setLoading(false);\n  };\n\n  let route;\n  if (!userName) {\n    route = <Route exact path=\"/\" component={Register} />;\n  } else {\n    route = (\n      <>\n        <Route exact path=\"/\" component={Themes} />\n        <Route path=\"/ocean\" component={OceanWave} />\n        <Route path=\"/mountain\" component={MountainView} />\n        <Route path=\"/rainy\" component={RainyBeach} />\n        <Route path=\"/congraturation\" component={Congraturation} />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Switch location={location}>{route}</Switch>\n        \n        {/* 冥想思考生成功能 */}\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n          <h2>生成冥想思考</h2>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"输入冥想主题，例如 '平静'\"\n            style={{ padding: '10px', width: '300px' }}\n          />\n          <button \n            onClick={fetchMeditationThought} \n            style={{ marginLeft: '10px', padding: '10px 20px' }}\n            disabled={loading}\n          >\n            {loading ? '生成中...' : '生成'}\n          </button>\n          {meditationThought && (\n            <div style={{ marginTop: '20px', fontSize: '20px', fontStyle: 'italic' }}>\n              <h3>生成的冥想思考：</h3>\n              <p>{meditationThought}</p>\n            </div>\n          )}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}