{"ast":null,"code":"var _jsxFileName = \"/Users/hans/Desktop/Meditation/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { MediumTitle } from 'style/style';\nimport Button from 'components/Button/Button';\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 92vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n\n  @media (max-width: 900px) {\n    flex-direction: column;\n  }\n`;\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 2.5rem;\n  text-align: center;\n  border-bottom: 3px solid black;\n  margin-bottom: 5rem;\n\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 576px) {\n    width: 80%;\n    font-size: 1.6rem;\n  }\n`;\nconst Select = styled.select`\n  width: 100%;\n  height: 50px;\n  font-size: 2.5rem;\n  text-align: center;\n  border-bottom: 3px solid black;\n  margin-bottom: 5rem;\n\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 576px) {\n    width: 80%;\n    font-size: 1.6rem;\n  }\n`;\nconst QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction Register(props) {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [meditationDuration, setMeditationDuration] = useState('');\n  const [meditationType, setMeditationType] = useState('guided'); // Default to 'guided'\n\n  const [step, setStep] = useState(1); // Track whether user is entering name, age, meditation duration, or meditation type\n\n  const validateInput = input => {\n    if (!input) {\n      alert(`Please enter your ${step === 1 ? 'name' : step === 2 ? 'age' : step === 3 ? 'meditation duration' : 'meditation type'}.`);\n      return false;\n    } // Add age validation for step 2\n\n\n    if (step === 2) {\n      const ageValue = parseInt(input, 10);\n\n      if (isNaN(ageValue) || ageValue <= 0 || ageValue >= 120) {\n        alert('Please enter a valid age between 1 and 119.');\n        return false;\n      }\n    } // Add meditation duration validation for step 3\n\n\n    if (step === 3 && !input) {\n      alert('Please select your meditation duration.');\n      return false;\n    } // Add meditation type validation for step 4\n\n\n    if (step === 4 && !input) {\n      alert('Please select whether you would like a guided or unguided meditation.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n\n  const handleAgeChange = e => setAge(e.target.value);\n\n  const handleMeditationDurationChange = e => setMeditationDuration(e.target.value);\n\n  const handleMeditationTypeChange = e => setMeditationType(e.target.value);\n\n  const handleClick = () => {\n    if (step === 1) {\n      if (validateInput(name)) {\n        localStorage.setItem('name', name);\n        setStep(2); // Move to the next step\n      }\n    } else if (step === 2) {\n      if (validateInput(age)) {\n        localStorage.setItem('age', age);\n        setStep(3); // Move to the next step\n      }\n    } else if (step === 3) {\n      if (validateInput(meditationDuration)) {\n        localStorage.setItem('meditationDuration', meditationDuration);\n        setStep(4); // Move to the next step\n      }\n    } else if (step === 4) {\n      if (validateInput(meditationType)) {\n        localStorage.setItem('meditationType', meditationType);\n        props.history.push('/'); // Navigate to the next page\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(QuestionContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, step === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"What is your name?\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleNameChange,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  })) : step === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"What is your age?\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleAgeChange,\n    value: age,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })) : step === 3 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"How long would you like to meditate today?\"), /*#__PURE__*/React.createElement(Select, {\n    onChange: handleMeditationDurationChange,\n    value: meditationDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"2 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"3 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"4 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"5 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"10 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"15 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"20 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"25 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"30 minutes\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Would you like to have guided or unguided meditation?\"), /*#__PURE__*/React.createElement(Select, {\n    onChange: handleMeditationTypeChange,\n    value: meditationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Guided\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Guided\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Unguided\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Unguided\"))), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default React.memo(Register);","map":{"version":3,"sources":["/Users/hans/Desktop/Meditation/src/pages/Register.js"],"names":["React","useState","styled","MediumTitle","Button","Container","div","Input","input","Select","select","QuestionContainer","Register","props","name","setName","age","setAge","meditationDuration","setMeditationDuration","meditationType","setMeditationType","step","setStep","validateInput","alert","ageValue","parseInt","isNaN","handleNameChange","e","target","value","handleAgeChange","handleMeditationDurationChange","handleMeditationTypeChange","handleClick","localStorage","setItem","history","push","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { MediumTitle } from 'style/style';\nimport Button from 'components/Button/Button';\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 92vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n\n  @media (max-width: 900px) {\n    flex-direction: column;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 2.5rem;\n  text-align: center;\n  border-bottom: 3px solid black;\n  margin-bottom: 5rem;\n\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 576px) {\n    width: 80%;\n    font-size: 1.6rem;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  height: 50px;\n  font-size: 2.5rem;\n  text-align: center;\n  border-bottom: 3px solid black;\n  margin-bottom: 5rem;\n\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 576px) {\n    width: 80%;\n    font-size: 1.6rem;\n  }\n`;\n\nconst QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction Register(props) {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [meditationDuration, setMeditationDuration] = useState('');\n  const [meditationType, setMeditationType] = useState('guided'); // Default to 'guided'\n  const [step, setStep] = useState(1); // Track whether user is entering name, age, meditation duration, or meditation type\n\n  const validateInput = input => {\n    if (!input) {\n      alert(`Please enter your ${step === 1 ? 'name' : step === 2 ? 'age' : step === 3 ? 'meditation duration' : 'meditation type'}.`);\n      return false;\n    }\n\n    // Add age validation for step 2\n    if (step === 2) {\n      const ageValue = parseInt(input, 10);\n      if (isNaN(ageValue) || ageValue <= 0 || ageValue >= 120) {\n        alert('Please enter a valid age between 1 and 119.');\n        return false;\n      }\n    }\n\n    // Add meditation duration validation for step 3\n    if (step === 3 && !input) {\n      alert('Please select your meditation duration.');\n      return false;\n    }\n\n    // Add meditation type validation for step 4\n    if (step === 4 && !input) {\n      alert('Please select whether you would like a guided or unguided meditation.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n  const handleAgeChange = e => setAge(e.target.value);\n  const handleMeditationDurationChange = e => setMeditationDuration(e.target.value);\n  const handleMeditationTypeChange = e => setMeditationType(e.target.value);\n\n  const handleClick = () => {\n    if (step === 1) {\n      if (validateInput(name)) {\n        localStorage.setItem('name', name);\n        setStep(2); // Move to the next step\n      }\n    } else if (step === 2) {\n      if (validateInput(age)) {\n        localStorage.setItem('age', age);\n        setStep(3); // Move to the next step\n      }\n    } else if (step === 3) {\n      if (validateInput(meditationDuration)) {\n        localStorage.setItem('meditationDuration', meditationDuration);\n        setStep(4); // Move to the next step\n      }\n    } else if (step === 4) {\n      if (validateInput(meditationType)) {\n        localStorage.setItem('meditationType', meditationType);\n        props.history.push('/'); // Navigate to the next page\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <QuestionContainer>\n          {step === 1 ? (\n            <>\n              <MediumTitle>What is your name?</MediumTitle>\n              <Input onChange={handleNameChange} value={name} />\n            </>\n          ) : step === 2 ? (\n            <>\n              <MediumTitle>What is your age?</MediumTitle>\n              <Input onChange={handleAgeChange} value={age} type=\"number\" />\n            </>\n          ) : step === 3 ? (\n            <>\n              <MediumTitle>How long would you like to meditate today?</MediumTitle>\n              <Select onChange={handleMeditationDurationChange} value={meditationDuration}>\n              <option value=\"2\">2 minutes</option>\n              <option value=\"3\">3 minutes</option>\n              <option value=\"4\">4 minutes</option>\n              <option value=\"5\">5 minutes</option>\n              <option value=\"10\">10 minutes</option>\n              <option value=\"15\">15 minutes</option>\n              <option value=\"20\">20 minutes</option>\n              <option value=\"25\">25 minutes</option>\n              <option value=\"30\">30 minutes</option>\n              </Select>\n            </>\n          ) : (\n            <>\n              <MediumTitle>Would you like to have guided or unguided meditation?</MediumTitle>\n              <Select onChange={handleMeditationTypeChange} value={meditationType}>\n                <option value=\"Guided\">Guided</option>\n                <option value=\"Unguided\">Unguided</option>\n              </Select>\n            </>\n          )}\n          <Button onClick={handleClick} />\n        </QuestionContainer>\n      </Container>\n    </div>\n  );\n}\n\nexport default React.memo(Register);"]},"metadata":{},"sourceType":"module"}