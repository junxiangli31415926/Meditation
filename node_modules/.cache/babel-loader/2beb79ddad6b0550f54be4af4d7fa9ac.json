{"ast":null,"code":"var _jsxFileName = \"/Users/hans/Desktop/Meditation/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { MediumTitle } from 'style/style';\nimport Button from 'components/Button/Button';\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 92vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n\n  @media (max-width: 900px) {\n    flex-direction: column;\n  }\n`;\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 2.5rem;\n  text-align: center;\n  border-bottom: 3px solid black;\n  margin-bottom: 5rem;\n\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 576px) {\n    width: 80%;\n    font-size: 1.6rem;\n  }\n`;\nconst QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction Register(props) {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [step, setStep] = useState(1); // Step 1: Name, Step 2: Age\n\n  const validateInput = input => {\n    if (!input) {\n      alert('Please complete the current question.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleNext = () => {\n    if (step === 1 && validateInput(name)) {\n      setStep(2); // Move to age question\n    }\n  };\n\n  const handleSubmit = () => {\n    if (step === 2 && validateInput(age)) {\n      localStorage.setItem('name', name);\n      localStorage.setItem('age', age);\n      props.history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(QuestionContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, step === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"What is your name?\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setName(e.target.value),\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Next\")), step === 2 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediumTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"What is your age?\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    onChange: e => setAge(e.target.value),\n    value: age,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n}\n\nexport default React.memo(Register);","map":{"version":3,"sources":["/Users/hans/Desktop/Meditation/src/pages/Register.js"],"names":["React","useState","styled","MediumTitle","Button","Container","div","Input","input","QuestionContainer","Register","props","name","setName","age","setAge","step","setStep","validateInput","alert","handleNext","handleSubmit","localStorage","setItem","history","push","e","target","value","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;;;;;CAA7B;AAgBA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;;;;;;;;;;;;;;;;CAA3B;AAkBA,MAAMC,iBAAiB,GAAGP,MAAM,CAACI,GAAI;;;;CAArC;;AAMA,SAASI,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,CAAD,CAAhC,CAHuB,CAGc;;AAErC,QAAMiB,aAAa,GAAGV,KAAK,IAAI;AAC7B,QAAI,CAACA,KAAL,EAAY;AACVW,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAND;;AAQA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIJ,IAAI,KAAK,CAAT,IAAcE,aAAa,CAACN,IAAD,CAA/B,EAAuC;AACrCK,MAAAA,OAAO,CAAC,CAAD,CAAP,CADqC,CACzB;AACb;AACF,GAJD;;AAMA,QAAMI,YAAY,GAAG,MAAM;AACzB,QAAIL,IAAI,KAAK,CAAT,IAAcE,aAAa,CAACJ,GAAD,CAA/B,EAAsC;AACpCQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BX,IAA7B;AACAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BT,GAA5B;AACAH,MAAAA,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;AACF,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,KAAK,CAAT,iBACC,uDACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEU,CAAC,IAAIb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7B;AAA+C,IAAA,KAAK,EAAEhB,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEQ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CAFJ,EAQGJ,IAAI,KAAK,CAAT,iBACC,uDACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEU,CAAC,IAAIX,MAAM,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAFvB;AAGE,IAAA,KAAK,EAAEd,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CATJ,CADF,CADF,CADF;AA0BD;;AAED,eAAerB,KAAK,CAAC6B,IAAN,CAAWnB,QAAX,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { MediumTitle } from 'style/style';\nimport Button from 'components/Button/Button';\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 92vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n\n  @media (max-width: 900px) {\n    flex-direction: column;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 2.5rem;\n  text-align: center;\n  border-bottom: 3px solid black;\n  margin-bottom: 5rem;\n\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 576px) {\n    width: 80%;\n    font-size: 1.6rem;\n  }\n`;\n\nconst QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction Register(props) {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [step, setStep] = useState(1); // Step 1: Name, Step 2: Age\n\n  const validateInput = input => {\n    if (!input) {\n      alert('Please complete the current question.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (step === 1 && validateInput(name)) {\n      setStep(2); // Move to age question\n    }\n  };\n\n  const handleSubmit = () => {\n    if (step === 2 && validateInput(age)) {\n      localStorage.setItem('name', name);\n      localStorage.setItem('age', age);\n      props.history.push('/');\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <QuestionContainer>\n          {step === 1 && (\n            <>\n              <MediumTitle>What is your name?</MediumTitle>\n              <Input onChange={e => setName(e.target.value)} value={name} />\n              <Button onClick={handleNext}>Next</Button>\n            </>\n          )}\n          {step === 2 && (\n            <>\n              <MediumTitle>What is your age?</MediumTitle>\n              <Input\n                type=\"number\"\n                onChange={e => setAge(e.target.value)}\n                value={age}\n              />\n              <Button onClick={handleSubmit}>Submit</Button>\n            </>\n          )}\n        </QuestionContainer>\n      </Container>\n    </div>\n  );\n}\n\nexport default React.memo(Register);"]},"metadata":{},"sourceType":"module"}